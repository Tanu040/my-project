In this task, I am creating a simple login form using React, focusing on understanding how to handle user input and manage state within a component. The form includes two main input fields: one for the username and one for the password. My goal is to practice capturing what the user types and storing it in the componentâ€™s state so that I can respond to it in real time.

I use the useState hook to manage the form data locally. For each input field, I set up a piece of state that updates whenever I type something. This makes the inputs controlled components, meaning their displayed values always reflect the current state. I find this approach really useful because it ensures that the data in my form is always in sync with what I see on the screen. It also helps me learn how React handles dynamic data and re-renders components efficiently when state changes.

When I click the submit button, I check whether both the username and password fields are filled. If either field is empty, I display a simple validation message asking me to complete the form. If both fields have values, I log the entered data to the console so I can see exactly what I typed. This step helps me understand how to capture user actions and process data before sending it anywhere, which is a core part of building interactive web applications.

Throughout this exercise, I test the form by typing different usernames and passwords, observing how the state updates with every keystroke. I also make sure the validation works correctly by trying to submit empty fields. This process teaches me not only how to manage state in React but also how to provide basic feedback to users. Overall, this task gives me hands-on experience with React state management, controlled components, form handling, and simple validation, which are all essential skills for building real-world applications.